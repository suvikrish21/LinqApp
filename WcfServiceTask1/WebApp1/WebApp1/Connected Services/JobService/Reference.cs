//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp1.JobService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobTypes", Namespace="http://schemas.datacontract.org/2004/07/JobServiceTask")]
    [System.SerializableAttribute()]
    public partial class JobTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobService.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/OpeningJobs", ReplyAction="http://tempuri.org/IService2/OpeningJobsResponse")]
        WebApp1.JobService.JobTypes[] OpeningJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/OpeningJobs", ReplyAction="http://tempuri.org/IService2/OpeningJobsResponse")]
        System.Threading.Tasks.Task<WebApp1.JobService.JobTypes[]> OpeningJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/OpeningJobsByRole", ReplyAction="http://tempuri.org/IService2/OpeningJobsByRoleResponse")]
        WebApp1.JobService.JobTypes[] OpeningJobsByRole(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/OpeningJobsByRole", ReplyAction="http://tempuri.org/IService2/OpeningJobsByRoleResponse")]
        System.Threading.Tasks.Task<WebApp1.JobService.JobTypes[]> OpeningJobsByRoleAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : WebApp1.JobService.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<WebApp1.JobService.IService2>, WebApp1.JobService.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApp1.JobService.JobTypes[] OpeningJobs() {
            return base.Channel.OpeningJobs();
        }
        
        public System.Threading.Tasks.Task<WebApp1.JobService.JobTypes[]> OpeningJobsAsync() {
            return base.Channel.OpeningJobsAsync();
        }
        
        public WebApp1.JobService.JobTypes[] OpeningJobsByRole(string name) {
            return base.Channel.OpeningJobsByRole(name);
        }
        
        public System.Threading.Tasks.Task<WebApp1.JobService.JobTypes[]> OpeningJobsByRoleAsync(string name) {
            return base.Channel.OpeningJobsByRoleAsync(name);
        }
    }
}
