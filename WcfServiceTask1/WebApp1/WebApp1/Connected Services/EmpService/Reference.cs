//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp1.EmpService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeType", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class EmployeeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptNo {
            get {
                return this.DeptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptNoField, value) != true)) {
                    this.DeptNoField = value;
                    this.RaisePropertyChanged("DeptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpService.IEmpService")]
    public interface IEmpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmployee", ReplyAction="http://tempuri.org/IEmpService/AddEmployeeResponse")]
        string AddEmployee(WebApp1.EmpService.EmployeeType value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmployee", ReplyAction="http://tempuri.org/IEmpService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<string> AddEmployeeAsync(WebApp1.EmpService.EmployeeType value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RetreiveEmployees", ReplyAction="http://tempuri.org/IEmpService/RetreiveEmployeesResponse")]
        WebApp1.EmpService.EmployeeType[] RetreiveEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RetreiveEmployees", ReplyAction="http://tempuri.org/IEmpService/RetreiveEmployeesResponse")]
        System.Threading.Tasks.Task<WebApp1.EmpService.EmployeeType[]> RetreiveEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RetreiveEmployeeByID", ReplyAction="http://tempuri.org/IEmpService/RetreiveEmployeeByIDResponse")]
        WebApp1.EmpService.EmployeeType RetreiveEmployeeByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RetreiveEmployeeByID", ReplyAction="http://tempuri.org/IEmpService/RetreiveEmployeeByIDResponse")]
        System.Threading.Tasks.Task<WebApp1.EmpService.EmployeeType> RetreiveEmployeeByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmpService/UpdateEmployeeResponse")]
        string UpdateEmployee(WebApp1.EmpService.EmployeeType value, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmpService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<string> UpdateEmployeeAsync(WebApp1.EmpService.EmployeeType value, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmpService/DeleteEmployeeResponse")]
        string DeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmpService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpServiceChannel : WebApp1.EmpService.IEmpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpServiceClient : System.ServiceModel.ClientBase<WebApp1.EmpService.IEmpService>, WebApp1.EmpService.IEmpService {
        
        public EmpServiceClient() {
        }
        
        public EmpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddEmployee(WebApp1.EmpService.EmployeeType value) {
            return base.Channel.AddEmployee(value);
        }
        
        public System.Threading.Tasks.Task<string> AddEmployeeAsync(WebApp1.EmpService.EmployeeType value) {
            return base.Channel.AddEmployeeAsync(value);
        }
        
        public WebApp1.EmpService.EmployeeType[] RetreiveEmployees() {
            return base.Channel.RetreiveEmployees();
        }
        
        public System.Threading.Tasks.Task<WebApp1.EmpService.EmployeeType[]> RetreiveEmployeesAsync() {
            return base.Channel.RetreiveEmployeesAsync();
        }
        
        public WebApp1.EmpService.EmployeeType RetreiveEmployeeByID(int id) {
            return base.Channel.RetreiveEmployeeByID(id);
        }
        
        public System.Threading.Tasks.Task<WebApp1.EmpService.EmployeeType> RetreiveEmployeeByIDAsync(int id) {
            return base.Channel.RetreiveEmployeeByIDAsync(id);
        }
        
        public string UpdateEmployee(WebApp1.EmpService.EmployeeType value, int id) {
            return base.Channel.UpdateEmployee(value, id);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeAsync(WebApp1.EmpService.EmployeeType value, int id) {
            return base.Channel.UpdateEmployeeAsync(value, id);
        }
        
        public string DeleteEmployee(int id) {
            return base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
    }
}
